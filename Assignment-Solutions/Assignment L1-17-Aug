# 1. Find top student IIT
def find_top_student(students_scores):
    # Complete this function
    max_list= []
    for i in students_scores:
        max_list.append(students_scores.get(i))
    max_num = max(max_list)
    students=[]
    for i in students_scores:
        if(students_scores.get(i) == max_num):
            students.append(i)
    if(len(students)>1):
        return(students)
    else:
        return(students[0])

# 2. Its time to remember sets
def factors(n):
    # Complete code for this function
    fac = []
    for i in range(1,n+1):
        if(n % i == 0 and i>0):
           fac.append(i)
    return fac 

def common_factors(a, b):
    # Complete code for this function
    cf = []
    for i in range(1,max(a,b)+1):
        if(a%i==0 and b%i==0):
            cf.append(i)
    return cf

def factors_upto(n):
    # Complete code for this function
    dic={}
    for i in range(1,n+1):
        dic[i]=factors(i)
    return dic

# 3.
import re
from collections import Counter

def get_most_frequent_word(lines):
    # Initialize an empty list to store all words
    words = []
    
    # Iterate over each line in the list
    for line in lines:
        # Remove punctuation and convert to lowercase
        cleaned_line = re.sub(r'[^\w\s]', '', line).lower()
        # Split the line into words and add to the list
        words.extend(cleaned_line.split())
    
    # If there are no valid words, return the appropriate message
    if not words:
        return "No valid words found in the list."
    
    # Use Counter to count word frequencies
    word_count = Counter(words)
    
    # Find the word with the maximum frequency
    most_frequent_word = word_count.most_common(1)[0][0]
    
    return most_frequent_word

# 4.
def calculate_median(scores):
  '''
  You are not required to take input for the scores.
  You just need to use `scores` variable to complete
  the program.
  '''
  # Write code here
  scores = sorted(scores)
  res = 0
  if(len(scores)%2 == 0):
      median = len(scores)//2
      res = (scores[(median-1)] + scores[(median)] )/2
        
  else:
      median = (len(scores)+1)//2
      res = scores[median-1]
  print(res)
